apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: s2i-java-11-binary-namespace
spec:
  params:
    - name: PATH_CONTEXT
      description: The location of the path to run s2i from
      default: .
      type: string
    - name: TLSVERIFY
      description: Verify the TLS on the registry endpoint (for push/pull to a non-TLS registry)
      default: "false"
      type: string
    - name: OUTPUT_IMAGE_STREAM
      type: string
      description: The application image url in registry
    - name: NAMESPACE
      type: string
      description: Namespace where to push the image
  workspaces:
    - name: source
  steps:
    - name: generate
      image: registry.redhat.io/ocp-tools-43-tech-preview/source-to-image-rhel8
      workingdir: $(workspaces.source.path)/target
      command:
        - 's2i'
        - 'build'
        - '$(params.PATH_CONTEXT)'
        - 'registry.access.redhat.com/openjdk/openjdk-11-rhel7'
        - '--image-scripts-url'
        - 'image:///usr/local/s2i'
        - '--as-dockerfile'
        - '/gen-source/Dockerfile.gen'
      volumeMounts:
        - name: envparams
          mountPath: /env-params
        - name: gen-source
          mountPath: /gen-source
    - name: build
      image: registry.redhat.io/rhel8/buildah
      workingdir: /gen-source
      command: 
        - buildah
        - bud
        - --tls-verify=$(params.TLSVERIFY)
        - --layers
        - -f
        - /gen-source/Dockerfile.gen
        - -t
        - image-registry.openshift-image-registry.svc:5000/$(params.NAMESPACE)/$(params.OUTPUT_IMAGE_STREAM)
        - .
      volumeMounts:
        - name: varlibcontainers
          mountPath: /var/lib/containers
        - name: gen-source
          mountPath: /gen-source
      securityContext:
        privileged: true
    - name: push
      image: registry.redhat.io/rhel8/buildah
      command:
        - buildah
        - push
        - --tls-verify=$(params.TLSVERIFY)
        - image-registry.openshift-image-registry.svc:5000/$(params.NAMESPACE)/$(params.OUTPUT_IMAGE_STREAM)
        - docker://image-registry.openshift-image-registry.svc:5000/$(params.NAMESPACE)/$(params.OUTPUT_IMAGE_STREAM)
      volumeMounts:
        - name: varlibcontainers
          mountPath: /var/lib/containers
      securityContext:
        privileged: true
  volumes:
    - name: varlibcontainers
      emptyDir: {}
    - name: gen-source
      emptyDir: {}
    - name: envparams
      emptyDir: {}
